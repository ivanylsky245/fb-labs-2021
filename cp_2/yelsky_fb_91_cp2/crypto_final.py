#!/usr/bin/env python
# coding: utf-8

# In[37]:


import pandas as pd
import csv
import collections


# In[52]:


alphabet  = ['а', 'б', 'в', 'г', 'д', 'е', 'ж','з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ','ы', 'ь', 'э', 'ю', 'я']
keys = ["ко","нам","бунт","пирог","котикмурка","трансконтенентальная",]
file = open("/Users/macbook/Downloads/crypto_lab2.txt")
my_text=file.read()
my_text=my_text.replace("i","")
my_text=my_text.replace("ё","")
dict_alphabet = dict(zip(alphabet,[i for i in range (0 , len(alphabet))]))
reverse_dict_alphabet=dict(zip([i for i in range (0 , len(alphabet))],alphabet))
print(reverse_dict_alphabet)

position_latters_of_keys=[]
dict_keys={}
for i in range (0,len(keys)):
    sep_keys=keys[i]
    for g in range(0,len(sep_keys)):
        l=sep_keys[g]
        for k in range(0,len(alphabet)):
            if l==alphabet[k]:
                position_latters_of_keys.append(k) 



    
print(dict_alphabet)






# In[62]:


key="трансконтенентальная"
list_of_cypher_numbers=[]
cypher_text=""
for i in range (0,len(my_text)):
    cypher_text=cypher_text+alphabet[(dict_alphabet[my_text[i]]+dict_alphabet[key[i%len(key)]])%len(alphabet)]
print(cypher_text)
print(correspondence_index_counter(cypher_text))


# In[54]:


dict_alphabet[text[0]]


# In[55]:


plain_text=""
for i in range (0,len(cypher_text)):
    #list_of_cypher_latters.append(dict_alphabet[text[i]]+dict_alphabet[key[i%len(key)]])
    plain_text=plain_text+alphabet[(dict_alphabet[cypher_text[i]]-dict_alphabet[key[i%len(key)]])%len(alphabet)]
print(plain_text)


# In[56]:


def correspondence_index_counter(text):
    index=0 
    k=1/(len(text)*(len(text)-1))
    for i in range(0,len(alphabet)):
        latters_repeats_counter=text.count(alphabet[i])
        index+=latters_repeats_counter*(latters_repeats_counter-1)
    correspondence_index=index*k
    return correspondence_index

def block_split(text,len_key):
    block=[]
    for i in range(0,len_key):
        block.append(text[i::len_key])
    return block 

text1="уушнэхяуеуыььарецшыбшивцмкэьфдкфтзршлхцрпаъычеблтхпбьроафтюрашбцтиыбьъюбяцбаъъшрсеццшиуусыюуэаьбйьръомцпьаюыъоафтзчцыныбмквбвъуъцбъюрохугяхсаацспнрцроцщйьэьгимхдрзяэксыжяфуэнрчхбвуццуулббрндтдрйлфркюбуюхыятфчцхрпшгэьуаюсаяухсуоьврвщжыэйчьунфеттруцыйняоэнчдъкыучцюцкцгтчшдзццэьцдыьгышътъниикэнчцвьвуэыаскыгсэуатгьообуэмкыщшэбшгаьуььбшыждытлнцнюьтамщрсцуддьщюощажъгэадчсскщтщущъьъяючьдыхчнцрфюооуюпммчцяъъющщгьсоецюькщмнняэшцебувястюоскчоццьмеущшаяущясъьхиыцнающъебкчйпотхсуушршъщфщмьуылфголцэугяефтншаршцяойьыъдччзрлршццыйятудымйфтжунгвьуйфбзнзопнхцашцщйсшчъпкасафэщрвштъляэнлслтухрфюькэшатлюснньаухюьжцбшеюцыжушцоцььгьъюеуныйрзыжнтуитэйянпщдгхьуэуушыюэвтжджерашивайщрмлндцдйшцчряпъуяюавунмсжуоигцоогштънютчкпжящяуьхэвыцытхшьрщяяуьпачшбцткутщйбьеувуэйтчйлуазнвапщмугякъцзрышццтмнсьэйэссцэрлцбтфябшъвфчийлышгжеуьуючвеыднэкаыгбойэогтросамйцруьтыюряыслдхноыиэцйыхраоаасучэщхщъбышцпяумтццьнищятарюъыжчлтлелкйудьымцтоссуфырцбтфябшацпьпбэбыгсяльаучпччркоьтхсежышцьыччфуряэцькзуфофъуъикцоццвкпплеяислйзыьъньмецяьйяначлпйрквнльщшешбычхжыркцтбмйцчэнычецьнруьирлжчътдщмлпщъяатбвядпноуупщухюькрюябхчйстщяэртюпярудюдрикькнльоиофошттожтуълъцщэыюъеъекпгпоэньмшуыьфтпъиуыьорээжюбаятсцдфлщзюцьеувйыпфщйпыоьхмчщуышапатхштьыцикжъеоэнчхтлрашиаюйъхюфьхсхшэяэкщцзуэзъъашфуухшнвайпаояъуохрщрщрьцгйбъаэпйцбьнъшщщятэьбэдхтзтучупэпяыуйтичхфщшщсюьеьбатябслхюшлкстпююсацхйхэуажсащбаюшъачофкэкшцвузуыцйтрчжкхэщкшюпяыуэхмйреэуыньруоъьююуъцукыурхбщцшхюттсцбрсщтсшрюрръшуьккшуцдшнсочрчдччршпющнюувьтютфшхмчэохрьцйыречюсчцхкэщкцюпцбэапкндтумтнэыьътщтючирзиаумдгпрэйчыжфдцэцъыгкиоъощнтцдцущунюугъхядъуйчзрзрксыйучобымндрщшлтщъвйэцеэунмрьнухщяуоыечшулйпшопцхоукхъеьхчкнэксршыэаршьнпчсъщеръыьоузыатцфмушэыргьныхрвтйсцухююосмъцьэакччршмоохцьшуэкэлжспхлчщхжбубэьфхпйофыонрььпшрхнпефхдттрщнщйжмэаюрьккмыщсюоеьсыаючсжуэшлтвудьфысъкъруэюкхсэсьвцфъатсенунипзйчеоясхьиустуттодплщъюфчптрыцнфшпсюэомтиэкоьлпсюуотячрййхуъбэщгрпрррктичеруххцэбйбфойъухчмлрршйуоцоьйтхоитщсщмцщбшъьягшштйаьпрььсобяэтйчжешцрцзумьщячянайчжюрпсржтхыъмкнмтщрынэуоыюэасфчпбшйацацфъюшеэнфйтнйккьуоылгфэерчйлщщфаьтуышчгнэфачошрьцрюрятсзофтющьзуомуъятъйщмгнтщэюьгщхыяиочцпыйнащъйяпэчэцшйпэцниэцгюрхесефтсъььньшжьэбштзфдйрщшнвшпщмшъщнюдхвунхръйцыофчехмнряцрыэсцсйэмсчцчщюоцущйяяцвятдрншоъргшбъшбцнцыхдпьмиуцукхзчхйчщупйщъяэйбьььахоснкащфяфоьсбцтчштйюълъньсобжъэкцмнъюрмаюйышътякфацэрлцаюйьсючякцмншьнцъыжттцшхсчхчуцухйомщрпнябхтлрапичуппгяднтчжррыурыьоааьэмтйизьучржосехрямссмрлрхиэцсочбцнрчзуъььньшбовоюыьосбьшщшяррюшытсрокедцауссбжгхтпкнйтунахцъоьуьйхцфйтшйрхяржюэйчтичхрюфуъцщйьсьвайчжеццьчцдйоыкяикрдпюажлхулббщерехкнэуцнъцдьбачцъьцшшьнкмяуююцэхцечйщпшгцщжфрыьхнучхуаруныьуяюъоущяфыоьихэсуфщтрефууьуэргумньыапуоххртьъуьсобяэнжсцбэуццщьшцбаъябнчэюэщщьууюгтапаюешпырсаьтувцдтрслеуыэнбутьтоэхцеууэьчкяжмцтьфчшъсуъюлщствйыфтскцжсреэижбзрюхащтсжцрпктюниуьютфшндрщсщцюхбгюачшсцтищцьшсхфырыспцоекнэщфязэыхяьыреоупмсржъпщютиызшфеьоппспьщюсэнзцтсубьъбунцыясчтслсрышцэбгхпркхцехнцьфкюуеюпаоыфсчснглшиугышуюатоухуылмьузотжътьоржщщзацьцрречъурдзртрхщчууьрнекшфнмйэцыабшбэвнзоирурщчящбсрщэнийьумюлбсаэяпшфкокмтлъпурюжжхыъмзчлтушлжкццюрхяыифдцучмгььоутгтэеуцкыущйщабахщчцъьцшшьнрюушубаяиошфеьопйцхиобачъьсжуиауфуьтэющофулдрьнъцайушшхцтэцмъсцэньукяюрэнййцбьщллсжжъбрахссхнцочрюуфрхыйнрсхбюяънжьнобэъсмйфешурчятдьвьфхръгпьажяыонцюадыичтплхлувнтцыкяткчоушелъцщэыюютюфчгцлргрвкпыбысшцчхчрыжмубтатьэйтчйхюфзнхуеошэвхрзитщэызэьрьбючсншйхрбцтсьуэшщъшцыжуцйъцвщжехсаючйпъщтуънэпггаеъеххумюрпяъиояощаъчннпоснаюпхтцлтфчпшвцццтюжхрстщкъцтжусргумцаогякщгруязцацфъюшеэнфатуюлщзржщшрбыцоппрырщяьвюрхяыфдьтжъбкцапъыохнэштйьеуъмрбщсовиэссунуцрыцкбзцдтрежйнопюсаэрвьвыомпенумнвуецббшскцмошутшрялочоэмтолтлмшрятоьуьбэелпкшцктяапююууирчеамуьтяыжеэйюхцйруньцдюьрюшяфыкцсафэыивоеььычокъсафълххоуъхядъумтмшовнюцабцуеьрдпнтуоцбблгюасшемдэрзррюурьфьщэклдрщпиъяъгяъьвттохпщщзтяежщюрччфчцкынцргюфтюябыцчетщяэдщыууаугчлслтуцьиэьжхфьвызейзьщрмвагцхевтмхйхшьоцдэпаауушкцмдщэуыэоообьярхиишдцфиуоотхрсяатууъоцктьмкэциашфчцшьркцтпъбафытйфупыщляхеьаьфйдлхкьащшяыоушхеднфтфыцврюбиосьэтзйснкрлхсцгяъьвтукфктооивонаюсаъклййлнъцаомряьэтмщйтунючбогщхыъмзцйэшуфцжюбылхтюкнрнббьъсюбышнюхжйзеуртзгьдьшъфьухтюзяэибжжсюрпцжссекшщксезоэоуниъхнчэлъщукырпэлййпплшиъяасьчьфыюоонфцьуцслохзчьунйчьшухсцгылчюырчикбэщщгуруэыаьхожхлзлнгяарбрчсшвйищцъггщйрюсащеъцкыоьгвшоьуьцтрйфеьэщуяфжышуфюкюленупнюцксфуьахспнщэуыэпьщюьбэкнйррыщщюойрюхюылцтоэьвхяяукоатчлоеаццьцвабрыуяифчихщпшгцярцбшъпцощфщтпиюыьгшъчпэсщуэыщацыйуъютюфщтцэюлхцыймюэтютчзупщкпхьсьтксьущтплбъшсрмуэцчптоьтрчщэбоойбьгшултьррумзугяюяднзспувщрхяявьаынцфчфчыуэяцщпрхштчуытхжчъцуяжътувыдымдчннурщтнбатээсрмлэыиуцмьщцднпайрщрртяыбюгжъякфажжщупяпмцзуяскъгчзялфмгтэюяаотдщзичмрюьгэхючыйожэуязкфюбффояюпчйфцоэдцхбааьчюшытпшуъшцяуоэыаруъпшсумхясппфуяхдьхчлыщкщщйсфуаохолеоомгуожаяьгпусрфыьэрубрюрряиснйрлъухмышутуйтхчрфыцьъцежышцщъеамчрщзхмгтцыббэелпкшцкцхбсърыъпецмкщюпывялцеэасййстжгщчщбнььючекцтжжщщчбутузкбышъпунщрхюьнббцхъефчзичмрюйооъюнпезцзьушнжьсьицчфелййрыузспбсбньызчрьсошцэхбтхюшхзйвчтоъшсрйщгцчрукпнсыутярлоъяднрчммнуьъюьгузувъноыеьйъцвщжьсгасеъжуугнустжышчъпмсрешцкнчуеыхряыоцйфыоннхыпчфояхрйзегящщуьйъшпэхлцмплъутяюпарщфъкътумюлпюьнрхячшнсжълювнуыжшгыъюацтззнмифуъуаощпммпдшбцхсебялцвнмндзущщтдюпштпвытртзщчънаумкэцитфчфещыцнфшпэютямръгцчуьъсцноицянресуъьэзюбмяпэаьхйжнэктиаьаяюъютьцтсрелхцпьщюытьхсжавыщфэутахюасултохщухяшвоуоьнтьпзшумггцжюрядпущйтшйфзхьгцвьыюрзсуфхццдъоьуьбыйндтшьоцыьимыкьхтйбчуящймайнюэъюецязпуцняэпщъбърущйзрошцуйкъхебэуъпенщрхюйкгрыунрдоцхцффсяууастъбялдшъщадьвуйоэычутзлазущжэехючффчпчщюллятбпрсффйчщтющшншонувыаьхчжкыццщыюьалубшуысачглусапъсьчпаосусцъцхгговцэфуццнъьгньшгйеьцанрлецйэыходтхячсзйхржжшгэжпююгащцогрьньтуьикубгякзэнряюфцюлцсугчуцйьшйфмяфекяьвн"
def key_len_counter(text):
    dict_of_index={}
    for key_len in range(1,32):
        indexes=0
        amount_of_block=block_split(text,key_len)
        for one_block in amount_of_block: 
            indexes+=correspondence_index_counter(one_block)
        slava_vsem_bogam=indexes/key_len
        dict_of_index[key_len]=slava_vsem_bogam
    return dict_of_index
text2="оооооооооооаааррриколлцлдвроітовсшооо"

def max_chastota_bukvi(text):
    latters = []  
    for i in range(0,len(text)):
        latters.append(text[i])
    latters_count = dict(collections.Counter(latters))
    number_of_max_chastotna_bukva=dict_alphabet[max(latters_count,key=latters_count.get)]
    return number_of_max_chastotna_bukva

print(max_chastota_bukvi(text2))

def key_decoder(text,r):
    key=[]
    amount_of_blocks=block_split(text,r)
    l="о"
    number_of_l=dict_alphabet[l]
    for one_block in amoamount_of_blocks:
        max_chastotna_bukva_v_bloke=max_chastota_bukvi(one_block)
        number_key=(max_chastotna_bukva_v_bloke-number_of_l)%len(alphabet)
        decode_key=reverse_dict_alphabet[number_key]
        key.append(decode_key)
    return key

        


# In[190]:


print(key_len_counter(text1))
        
    
        


# In[ ]:





# In[219]:


l="о"
number_of_l=dict_alphabet[l]
print(number_of_l)


# In[57]:


print(reverse_dict_alphabet)


# In[232]:


plain_text=""
keys="делолисоборотней"
for i in range (0,len(text1)):
    #list_of_cypher_latters.append(dict_alphabet[text[i]]+dict_alphabet[key[i%len(key)]])
    plain_text=plain_text+alphabet[(dict_alphabet[text1[i]]-dict_alphabet[keys[i%len(keys)]])%len(alphabet)]
print(plain_text)


# In[227]:


def key_decoder(text,r):
    key=[]
    amount_of_blocks=block_split(text,r)
    l="о"
    number_of_l=dict_alphabet[l]
    for one_block in amount_of_blocks:
        max_chastotna_bukva_v_bloke=max_chastota_bukvi(one_block)
        number_key=(max_chastotna_bukva_v_bloke-number_of_l)%len(alphabet)
        decode_key=reverse_dict_alphabet[number_key]
        key.append(decode_key)
    return key

print(key_decoder(text1,16))


# In[ ]:




